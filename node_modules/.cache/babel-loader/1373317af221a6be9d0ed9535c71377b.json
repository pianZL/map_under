{"remainingRequest":"D:\\chaotuPro\\map_under\\node_modules\\babel-loader\\lib\\index.js!D:\\chaotuPro\\map_under\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\chaotuPro\\map_under\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\chaotuPro\\map_under\\src\\views\\echarts\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\chaotuPro\\map_under\\src\\views\\echarts\\index.vue","mtime":1602207289948},{"path":"D:\\chaotuPro\\map_under\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkVjaGFydHMiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtYXBOYW1lOiAn5YWo5Zu9JywKICAgICAgbWFwRGF0YTogW10sCiAgICAgIG9sZE5hbWVMaXN0OiBbXSwKICAgICAgbGV2ZWw6IDAKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBkb3dubG9hZDogZnVuY3Rpb24gZG93bmxvYWQoKSB7CiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gImh0dHBzOi8vZ2VvLmRhdGF2LmFsaXl1bi5jb20vYXJlYXNfdjIvYm91bmQvMTAwMDAwX2Z1bGwuanNvbiI7CiAgICAgIGNvbnNvbGUubG9nKCJhIiwgYSk7CiAgICB9LAogICAgLy8g5LiL5LiA57qnCiAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KHBhcmFtKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgdmFyIGluZGV4ID0gc2VsZi5vbGROYW1lTGlzdC5maW5kSW5kZXgoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gZS5uYW1lID09PSBwYXJhbS5uYW1lOwogICAgICB9KTsKCiAgICAgIGlmIChpbmRleCA9PT0gLTEgJiYgc2VsZi5tYXBOYW1lICE9PSBwYXJhbS5uYW1lKSB7CiAgICAgICAgdmFyIG9sZE1hcEluZm8gPSB7CiAgICAgICAgICBuYW1lOiBwYXJhbS5uYW1lLAogICAgICAgICAgcGFyZW50OiBzZWxmLm1hcE5hbWUsCiAgICAgICAgICBsZXZlbDogc2VsZi5sZXZlbAogICAgICAgIH07CiAgICAgICAgc2VsZi5tYXBOYW1lID0gcGFyYW0ubmFtZTsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIHNlbGYuaW5pdCgpOwogICAgICAgICAgc2VsZi5vbGROYW1lTGlzdC5wdXNoKG9sZE1hcEluZm8pOwogICAgICAgICAgc2VsZi5vbGRNYXBOYW1lID0gcGFyYW0ubmFtZTsKICAgICAgICAgIHNlbGYubGV2ZWwgKz0gMTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJuZXh0Iiwgc2VsZi5sZXZlbCk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgc2VsZi5tYXBOYW1lID0gc2VsZi5vbGRNYXBOYW1lOwogICAgICAgICAgc2VsZi4kbWVzc2FnZS5lcnJvcigi55uu5YmN6L+Y5pyq5pyJ6K+l5Z+O5biC5L+h5oGv77yM6K+3562J5YCZ5pWw5o2u5LiK5LygIik7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuW3sue7j+aYr+acgOW6leWxguS6hiIpOwogICAgICB9CiAgICB9LAogICAgLy8g5LiK5LiA57qnCiAgICBwcmU6IGZ1bmN0aW9uIHByZSgpIHsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICBzZWxmLmxldmVsIC09IDE7CiAgICAgIGNvbnNvbGUubG9nKCJwcmUiLCBzZWxmLmxldmVsKTsKICAgICAgdmFyIGluZGV4ID0gc2VsZi5vbGROYW1lTGlzdC5maW5kSW5kZXgoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gZS5sZXZlbCA9PT0gc2VsZi5sZXZlbDsKICAgICAgfSk7IC8vIGNvbnNvbGUubG9nKGluZGV4KQoKICAgICAgaWYgKGluZGV4ID4gLTEpIHsKICAgICAgICBzZWxmLm1hcE5hbWUgPSBzZWxmLm9sZE5hbWVMaXN0W2luZGV4XS5wYXJlbnQ7CiAgICAgICAgY29uc29sZS5sb2coc2VsZi5tYXBOYW1lKTsKICAgICAgICBzZWxmLmluaXQoKTsKICAgICAgICBzZWxmLm9sZE5hbWVMaXN0LnNwbGljZShpbmRleCwgMSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc2VsZi5vbGROYW1lTGlzdCA9IFtdOwogICAgICAgIHNlbGYubGV2ZWwgPSAwOwogICAgICAgIHNlbGYuJG1lc3NhZ2UuZXJyb3IoIuW3sue7j+aYr+acgOmhtuWxguS6hiIpOwogICAgICB9CiAgICB9LAogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICB2YXIgZGF0YTsgLy8gdHJ5IHsKCiAgICAgIGRhdGEgPSByZXF1aXJlKCIuLi8uLi9hc3NldHMvanNvbi8iICsgc2VsZi5tYXBOYW1lICsgIi5qc29uIik7IC8vIHNlbGYubGV2ZWwgKz0gMTsKCiAgICAgIHNlbGYubWFwRGF0YSA9IGRhdGE7CiAgICAgIHNlbGYuJGVjaGFydHMucmVnaXN0ZXJNYXAoc2VsZi5tYXBOYW1lLCBzZWxmLm1hcERhdGEpOwogICAgICB2YXIgbWFwID0gc2VsZi4kZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlY2hhcnRzIikpOwogICAgICB2YXIgb3B0aW9uID0gewogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICJpdGVtIiwKICAgICAgICAgIHNob3dEZWxheTogMCwKICAgICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbjogMC4yLAogICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiBmb3JtYXR0ZXIocGFyYW1zKSB7CiAgICAgICAgICAgIHJldHVybiBwYXJhbXMuc2VyaWVzTmFtZSArICI8YnIvPiIgKyBwYXJhbXMubmFtZSArICI6ICIgKyBwYXJhbXMudmFsdWU7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAvLyDop4bop4nmmKDlsITnu4Tku7YKICAgICAgICB2aXN1YWxNYXA6IHsKICAgICAgICAgIGxlZnQ6ICJyaWdodCIsCiAgICAgICAgICBtaW46IDEwMCwKICAgICAgICAgIG1heDogMzgwMCwKICAgICAgICAgIGluUmFuZ2U6IHsKICAgICAgICAgICAgY29sb3I6IFsiIzMxMzY5NSIsICIjNDU3NWI0IiwgIiM3NGFkZDEiLCAiI2FiZDllOSIsICIjZTBmM2Y4IiwgIiNmZmZmYmYiLCAiI2ZlZTA5MCIsICIjZmRhZTYxIiwgIiNmNDZkNDMiLCAiI2Q3MzAyNyIsICIjYTUwMDI2Il0KICAgICAgICAgIH0sCiAgICAgICAgICB0ZXh0OiBbIkhpZ2giLCAiTG93Il0sCiAgICAgICAgICAvLyDmlofmnKzvvIzpu5jorqTkuLrmlbDlgLzmlofmnKwKICAgICAgICAgIGNhbGN1bGFibGU6IHRydWUKICAgICAgICB9LAogICAgICAgIC8vIOW3peWFt+eusQogICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICBsZWZ0OiAibGVmdCIsCiAgICAgICAgICB0b3A6ICJ0b3AiLAogICAgICAgICAgZmVhdHVyZTogewogICAgICAgICAgICBkYXRhVmlldzogewogICAgICAgICAgICAgIHJlYWRPbmx5OiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyByZWFkT25seeS4unRydWXnmoTml7blgJkg5LiN5pi+56S65Yi35pawIOWwseaYr+WUr+S4gOeahOaVsOaNru+8jOS4jeiDveS/ruaUuSDvvIxmYWxzZSDliJnluKbmnInliLfmlrAKICAgICAgICAgICAgLy8gcmVzdG9yZToge30sIC8vIOi/mOWOn+aVsOaNrgogICAgICAgICAgICBzYXZlQXNJbWFnZToge30gLy8g5bCG5Zyw5Zu+5LiL6L295Li65Zu+54mHCgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbGF5b3V0Q2VudGVyOiBbJzUwJScsICc1NyUnXSwKICAgICAgICBsYXlvdXRTaXplOiAxMDAwLAogICAgICAgIC8vIOaVsOaNrgogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICIxIiwKICAgICAgICAgIHR5cGU6ICJtYXAiLAogICAgICAgICAgbWFwOiBzZWxmLm1hcE5hbWUsCiAgICAgICAgICB6b29tOiAwLjYsCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICB9LAogICAgICAgICAgbWFwTG9jYXRpb246IHsKICAgICAgICAgICAgeTogMzAsCiAgICAgICAgICAgIHg6IDYwCiAgICAgICAgICB9LAogICAgICAgICAgaXRlbVN5dGxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGNvbG9yOiAiI2ZlY2IyZSIsCiAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMTIsCiAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICIjMGQ1ZWJkIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgY29vcmRpbmF0ZVN5c3RlbTogImdlbyIsCiAgICAgICAgICBkYXRhOiBbewogICAgICAgICAgICBuYW1lOiAi6ZSm5rGf5Yy6IiwKICAgICAgICAgICAgdmFsdWU6ICIyMzMzIgogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAi5Y+M5rWB5Yy6IiwKICAgICAgICAgICAgdmFsdWU6ICIyNjY2IgogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAi6Z2S576K5Yy6IiwKICAgICAgICAgICAgdmFsdWU6ICIxMzMzIgogICAgICAgICAgfV0KICAgICAgICB9XQogICAgICB9OwogICAgICBtYXAuc2V0T3B0aW9uKG9wdGlvbik7CiAgICAgIG1hcC5vZmYoImNsaWNrIik7CiAgICAgIG1hcC5vZmYoImNvbnRleHRtZW51Iik7IC8vIOaJk+W8gOWcsOWbvueCueWHu+S6i+S7tgoKICAgICAgbWFwLm9uKCJjbGljayIsIGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICBzZWxmLm5leHQocGFyYW1zKTsKICAgICAgfSk7IC8vIOaJk+W8gOm8oOagh+WPs+mUruS6i+S7tgoKICAgICAgbWFwLm9uKCJjb250ZXh0bWVudSIsIGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICBzZWxmLnByZShwYXJhbXMpOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXQoKTsKICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <div id=\"echarts\"></div>\n  <el-button @click=\"download\">下载</el-button>\n</div>\n</template>\n<script>\nexport default {\n  name: \"Echarts\",\n  data() {\n    return {\n      mapName: '全国',\n      mapData: [],\n      oldNameList: [],\n      level: 0\n    };\n  },\n  methods: {\n    download() {\n      window.location.href = \"https://geo.datav.aliyun.com/areas_v2/bound/100000_full.json\"\n      console.log(\"a\",a)\n\n    },\n    // 下一级\n    next(param) {\n      const self = this\n      const index = self.oldNameList.findIndex(e=>{\n        return e.name === param.name\n      })\n      if(index === -1 && self.mapName !== param.name) {\n        const oldMapInfo = {name:param.name,parent:self.mapName,level:self.level}\n        self.mapName = param.name\n        try{\n          self.init()\n          self.oldNameList.push(oldMapInfo)\n          self.oldMapName = param.name\n          self.level += 1\n          console.log(\"next\",self.level)\n        }catch (e) {\n          self.mapName = self.oldMapName\n          self.$message.error(\"目前还未有该城市信息，请等候数据上传\")\n        }\n      } else {\n        this.$message.error(\"已经是最底层了\")\n      }\n    },\n    // 上一级\n    pre() {\n      const self = this\n      self.level -= 1\n      console.log(\"pre\",self.level)\n      const index = self.oldNameList.findIndex(e=>{\n        return e.level === self.level\n      })\n      // console.log(index)\n      if(index > -1) {\n        self.mapName = self.oldNameList[index].parent\n        console.log(self.mapName)\n        self.init()\n        self.oldNameList.splice(index,1)\n      } else {\n        self.oldNameList = []\n        self.level = 0\n        self.$message.error(\"已经是最顶层了\")\n      }\n    },\n    init() {\n      const self = this;\n      let data;\n      // try {\n        data = require(\"../../assets/json/\" + self.mapName + \".json\");\n        // self.level += 1;\n        self.mapData = data;\n        self.$echarts.registerMap(self.mapName, self.mapData);\n        let map = self.$echarts.init(document.getElementById(\"echarts\"));\n        const option = {\n          tooltip: {\n            trigger: \"item\",\n            showDelay: 0,\n            transitionDuration: 0.2,\n            formatter: function(params) {\n              return (\n                params.seriesName + \"<br/>\" + params.name + \": \" + params.value\n              );\n            }\n          },\n          // 视觉映射组件\n          visualMap: {\n            left: \"right\",\n            min: 100,\n            max: 3800,\n            inRange: {\n              color: [\n                \"#313695\",\n                \"#4575b4\",\n                \"#74add1\",\n                \"#abd9e9\",\n                \"#e0f3f8\",\n                \"#ffffbf\",\n                \"#fee090\",\n                \"#fdae61\",\n                \"#f46d43\",\n                \"#d73027\",\n                \"#a50026\"\n              ]\n            },\n            text: [\"High\", \"Low\"], // 文本，默认为数值文本\n            calculable: true\n          },\n          // 工具箱\n          toolbox: {\n            show: true,\n            left: \"left\",\n            top: \"top\",\n            feature: {\n              dataView: { readOnly: false }, // readOnly为true的时候 不显示刷新 就是唯一的数据，不能修改 ，false 则带有刷新\n              // restore: {}, // 还原数据\n              saveAsImage: {} // 将地图下载为图片\n            }\n          },\n          layoutCenter: ['50%','57%'],\n          layoutSize: 1000,\n          // 数据\n          series: [\n            {\n              name: \"1\",\n              type: \"map\",\n              map: self.mapName,\n              zoom: 0.6,\n              label: {\n                show: true\n              },\n              mapLocation: {\n                y: 30,\n                x: 60\n              },\n              itemSytle: {\n                normal: {\n                  color: \"#fecb2e\",\n                  shadowBlur: 12,\n                  shadowColor: \"#0d5ebd\"\n                }\n              },\n              coordinateSystem: \"geo\",\n              data: [\n                { name: \"锦江区\", value: \"2333\" },\n                { name: \"双流区\", value: \"2666\" },\n                { name: \"青羊区\", value: \"1333\" }\n              ]\n            }\n          ]\n        };\n        map.setOption(option);\n        map.off(\"click\");\n        map.off(\"contextmenu\");\n        // 打开地图点击事件\n        map.on(\"click\", function(params) {\n          self.next(params)\n        });\n        // 打开鼠标右键事件\n        map.on(\"contextmenu\", function(params) {\n          self.pre(params)\n        });\n    }\n  },\n  mounted() {\n    this.init()\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n  #echarts{\n    width: 100%;\n    height: 740px;\n    margin-left: auto;\n    margin-right: auto;\n    background-color: aqua;\n    float: right;\n  }\n</style>"],"sourceRoot":"src/views/echarts"}]}