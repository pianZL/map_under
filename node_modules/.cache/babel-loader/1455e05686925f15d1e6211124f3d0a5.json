{"remainingRequest":"D:\\chaotuPro\\map_under\\node_modules\\babel-loader\\lib\\index.js!D:\\chaotuPro\\map_under\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\chaotuPro\\map_under\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\chaotuPro\\map_under\\src\\views\\echarts\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\chaotuPro\\map_under\\src\\views\\echarts\\index.vue","mtime":1602162091869},{"path":"D:\\chaotuPro\\map_under\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkVjaGFydHMiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtYXBOYW1lOiAn5YWo5Zu9JywKICAgICAgbWFwRGF0YTogW10sCiAgICAgIG9sZE5hbWVMaXN0OiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOS4i+S4gOe6pwogICAgbmV4dDogZnVuY3Rpb24gbmV4dChwYXJhbSkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHZhciBpbmRleCA9IHNlbGYub2xkTmFtZUxpc3QuZmluZEluZGV4KGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGUubmFtZSA9PT0gcGFyYW0ubmFtZTsKICAgICAgfSk7CgogICAgICBpZiAoaW5kZXggPT09IC0xICYmIHNlbGYubWFwTmFtZSAhPT0gcGFyYW0ubmFtZSkgewogICAgICAgIHZhciBvbGRNYXBJbmZvID0gewogICAgICAgICAgbmFtZTogcGFyYW0ubmFtZSwKICAgICAgICAgIHBhcmVudDogc2VsZi5tYXBOYW1lCiAgICAgICAgfTsKICAgICAgICBzZWxmLm9sZE5hbWVMaXN0LnB1c2gob2xkTWFwSW5mbyk7CiAgICAgICAgc2VsZi5tYXBOYW1lID0gcGFyYW0ubmFtZTsKICAgICAgICBzZWxmLmluaXQoKTsgLy8gdGhpcy5udW0gPSB0aGlzLm9sZE1hcFNlbGVjdC5sZW5ndGgKICAgICAgfSBlbHNlIHsKICAgICAgICBzZWxmLiRtZXNzYWdlLmVycm9yKCLlt7Lnu4/mmK/mnIDlupXlsYLkuoYiKTsKICAgICAgfSAvLyBjb25zb2xlLmxvZygidGhpc3h6eiIsdGhpcy5vbGRNYXBTZWxlY3QpCgogICAgfSwKICAgIC8vIOS4iuS4gOe6pwogICAgcHJlOiBmdW5jdGlvbiBwcmUoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgdmFyIGluZGV4ID0gc2VsZi5vbGROYW1lTGlzdC5maW5kSW5kZXgoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gZS5uYW1lID09PSBzZWxmLm1hcE5hbWU7CiAgICAgIH0pOwoKICAgICAgaWYgKGluZGV4ID4gLTEgJiYgc2VsZi5vbGROYW1lTGlzdFtpbmRleF0ucGFyZW50KSB7CiAgICAgICAgc2VsZi5tYXBOYW1lID0gc2VsZi5vbGROYW1lTGlzdFtpbmRleF0ucGFyZW50OwogICAgICAgIHNlbGYuaW5pdCgpOwogICAgICAgIHNlbGYub2xkTmFtZUxpc3Quc3BsaWNlKGluZGV4LCAxKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBzZWxmLiRtZXNzYWdlLmVycm9yKCLlt7Lnu4/mmK/mnIDpobblsYLkuoYiKTsKICAgICAgfSAvLyBjb25zb2xlLmxvZygidGhpc3ByZSIsdGhpcy5vbGRNYXBTZWxlY3QpCgogICAgfSwKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgdmFyIGRhdGE7CgogICAgICB0cnkgewogICAgICAgIGRhdGEgPSByZXF1aXJlKCIuLi8uLi9hc3NldHMvanNvbi8iICsgc2VsZi5tYXBOYW1lICsgIi5qc29uIik7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBzZWxmLiRtZXNzYWdlLmVycm9yKCLnm67liY3msqHmnInor6Xln47luILkv6Hmga/vvIzor7fph43mlrDpgInmi6kiKTsKICAgICAgfQoKICAgICAgc2VsZi5tYXBEYXRhID0gZGF0YTsKICAgICAgc2VsZi4kZWNoYXJ0cy5yZWdpc3Rlck1hcChzZWxmLm1hcE5hbWUsIHNlbGYubWFwRGF0YSk7CiAgICAgIHZhciBtYXAgPSBzZWxmLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVjaGFydHMiKSk7CiAgICAgIHZhciBjb252ZXJ0RGF0YSA9IHsKICAgICAgICDmiJDpg706IFsxMDQuMDY1NzM1LCAzMC42NTk0NjJdLAogICAgICAgIOmUpuaxn+WMujogWzEwNC4yMzE1LCAzMC4yODIyMDldCiAgICAgIH07CiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogIml0ZW0iLAogICAgICAgICAgc2hvd0RlbGF5OiAwLAogICAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiAwLjIsCiAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihwYXJhbXMpIHsKICAgICAgICAgICAgcmV0dXJuIHBhcmFtcy5zZXJpZXNOYW1lICsgIjxici8+IiArIHBhcmFtcy5uYW1lICsgIjogIiArIHBhcmFtcy52YWx1ZTsKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgb3JpZW50OiAidmVydGljYWwiLAogICAgICAgICAgbGVmdDogImxlZnQiLAogICAgICAgICAgZGF0YTogWyLplIDllK7pop0iXQogICAgICAgIH0sCiAgICAgICAgLy8g6KeG6KeJ5pig5bCE57uE5Lu2CiAgICAgICAgdmlzdWFsTWFwOiB7CiAgICAgICAgICBsZWZ0OiAicmlnaHQiLAogICAgICAgICAgbWluOiAxMDAsCiAgICAgICAgICBtYXg6IDM4MDAsCiAgICAgICAgICBpblJhbmdlOiB7CiAgICAgICAgICAgIGNvbG9yOiBbIiMzMTM2OTUiLCAiIzQ1NzViNCIsICIjNzRhZGQxIiwgIiNhYmQ5ZTkiLCAiI2UwZjNmOCIsICIjZmZmZmJmIiwgIiNmZWUwOTAiLCAiI2ZkYWU2MSIsICIjZjQ2ZDQzIiwgIiNkNzMwMjciLCAiI2E1MDAyNiJdCiAgICAgICAgICB9LAogICAgICAgICAgdGV4dDogWyJIaWdoIiwgIkxvdyJdLAogICAgICAgICAgLy8g5paH5pys77yM6buY6K6k5Li65pWw5YC85paH5pysCiAgICAgICAgICBjYWxjdWxhYmxlOiB0cnVlCiAgICAgICAgfSwKICAgICAgICAvLyDlt6XlhbfnrrEKICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgbGVmdDogImxlZnQiLAogICAgICAgICAgdG9wOiAidG9wIiwKICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgZGF0YVZpZXc6IHsKICAgICAgICAgICAgICByZWFkT25seTogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgLy8gcmVhZE9ubHnkuLp0cnVl55qE5pe25YCZIOS4jeaYvuekuuWIt+aWsCDlsLHmmK/llK/kuIDnmoTmlbDmja7vvIzkuI3og73kv67mlLkg77yMZmFsc2Ug5YiZ5bim5pyJ5Yi35pawCiAgICAgICAgICAgIC8vIHJlc3RvcmU6IHt9LCAvLyDov5jljp/mlbDmja4KICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHt9IC8vIOWwhuWcsOWbvuS4i+i9veS4uuWbvueJhwoKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxheW91dENlbnRlcjogWyc0MCUnLCAnNTAlJ10sCiAgICAgICAgbGF5b3V0U2l6ZTogMTAwMCwKICAgICAgICAvLyDmlbDmja4KICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAiMSIsCiAgICAgICAgICB0eXBlOiAibWFwIiwKICAgICAgICAgIG1hcDogc2VsZi5tYXBOYW1lLAogICAgICAgICAgem9vbTogMC42LAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIG1hcExvY2F0aW9uOiB7CiAgICAgICAgICAgIHk6IDMwLAogICAgICAgICAgICB4OiA2MAogICAgICAgICAgfSwKICAgICAgICAgIGl0ZW1TeXRsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBjb2xvcjogIiNmZWNiMmUiLAogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEyLAogICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAiIzBkNWViZCIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGNvb3JkaW5hdGVTeXN0ZW06ICJnZW8iLAogICAgICAgICAgZGF0YTogW3sKICAgICAgICAgICAgbmFtZTogIumUpuaxn+WMuiIsCiAgICAgICAgICAgIHZhbHVlOiAiMjMzMyIKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogIuWPjOa1geWMuiIsCiAgICAgICAgICAgIHZhbHVlOiAiMjY2NiIKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgbmFtZTogIumdkue+iuWMuiIsCiAgICAgICAgICAgIHZhbHVlOiAiMTMzMyIKICAgICAgICAgIH1dCiAgICAgICAgfV0KICAgICAgfTsKICAgICAgbWFwLnNldE9wdGlvbihvcHRpb24pOwogICAgICBtYXAub2ZmKCJjbGljayIpOwogICAgICBtYXAub2ZmKCJjb250ZXh0bWVudSIpOwogICAgICBtYXAub24oImNsaWNrIiwgZnVuY3Rpb24gKHBhcmFtcykgewogICAgICAgIGNvbnNvbGUubG9nKCJwYXJhbXMxIiwgcGFyYW1zKTsKICAgICAgICBzZWxmLm5leHQocGFyYW1zKTsgLy8gIG1hcC5vZmYoJ2NsaWNrJykKICAgICAgICAvL+mAu+i+keaOp+WItgogICAgICB9KTsKICAgICAgbWFwLm9uKCJjb250ZXh0bWVudSIsIGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICBjb25zb2xlLmxvZygicGFyYW1zMiIsIHBhcmFtcyk7CiAgICAgICAgc2VsZi5wcmUocGFyYW1zKTsgLy/pvKDmoIflj7PplK7kuovku7bvvIzmmL7npLrlj7PplK7ov5Tlm57kuIrkuIDnuqcKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0KCk7CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  aaa\n  <div id=\"echarts\"></div>\n</div>\n</template>\n<script>\nexport default {\n  name: \"Echarts\",\n  data() {\n    return {\n      mapName: '全国',\n      mapData: [],\n      oldNameList: [],\n    };\n  },\n  methods: {\n    // 下一级\n    next(param) {\n      const self = this\n      const index = self.oldNameList.findIndex(e=>{\n        return e.name === param.name\n      })\n      if(index === -1 && self.mapName !== param.name) {\n        const oldMapInfo = {name:param.name,parent:self.mapName}\n        self.oldNameList.push(oldMapInfo)\n        self.mapName = param.name\n        self.init()\n        // this.num = this.oldMapSelect.length\n      } else {\n        self.$message.error(\"已经是最底层了\")\n      }\n      // console.log(\"thisxzz\",this.oldMapSelect)\n    },\n    // 上一级\n    pre() {\n      const self = this\n      var index = self.oldNameList.findIndex(e=>{\n        return e.name === self.mapName\n      })\n      if(index > -1 && self.oldNameList[index].parent) {\n        self.mapName = self.oldNameList[index].parent\n        self.init()\n        self.oldNameList.splice(index,1)\n      } else {\n        self.$message.error(\"已经是最顶层了\")\n      }\n      // console.log(\"thispre\",this.oldMapSelect)\n    },\n    init() {\n      const self = this;\n      let data;\n      try {\n        data = require(\"../../assets/json/\" + self.mapName + \".json\");\n      }catch(e) {\n        self.$message.error(\"目前没有该城市信息，请重新选择\")\n      }\n      self.mapData = data;\n      self.$echarts.registerMap(self.mapName, self.mapData);\n      let map = self.$echarts.init(document.getElementById(\"echarts\"));\n      const convertData = {\n        成都: [104.065735, 30.659462],\n        锦江区: [104.2315, 30.282209]\n      };\n      const option = {\n        tooltip: {\n          trigger: \"item\",\n          showDelay: 0,\n          transitionDuration: 0.2,\n          formatter: function(params) {\n            return (\n              params.seriesName + \"<br/>\" + params.name + \": \" + params.value\n            );\n          }\n        },\n        legend: {\n          orient: \"vertical\",\n          left: \"left\",\n          data: [\"销售额\"]\n        },\n        // 视觉映射组件\n        visualMap: {\n          left: \"right\",\n          min: 100,\n          max: 3800,\n          inRange: {\n            color: [\n              \"#313695\",\n              \"#4575b4\",\n              \"#74add1\",\n              \"#abd9e9\",\n              \"#e0f3f8\",\n              \"#ffffbf\",\n              \"#fee090\",\n              \"#fdae61\",\n              \"#f46d43\",\n              \"#d73027\",\n              \"#a50026\"\n            ]\n          },\n          text: [\"High\", \"Low\"], // 文本，默认为数值文本\n          calculable: true\n        },\n        // 工具箱\n        toolbox: {\n          show: true,\n          left: \"left\",\n          top: \"top\",\n          feature: {\n            dataView: { readOnly: false }, // readOnly为true的时候 不显示刷新 就是唯一的数据，不能修改 ，false 则带有刷新\n            // restore: {}, // 还原数据\n            saveAsImage: {} // 将地图下载为图片\n          }\n        },\n        layoutCenter: ['40%','50%'],\n        layoutSize: 1000,\n        // 数据\n        series: [\n          {\n            name: \"1\",\n            type: \"map\",\n            map: self.mapName,\n            zoom: 0.6,\n            label: {\n              show: true\n            },\n            mapLocation: {\n              y: 30,\n              x: 60\n            },\n            itemSytle: {\n              normal: {\n                color: \"#fecb2e\",\n                shadowBlur: 12,\n                shadowColor: \"#0d5ebd\"\n              }\n            },\n            coordinateSystem: \"geo\",\n            data: [\n              { name: \"锦江区\", value: \"2333\" },\n              { name: \"双流区\", value: \"2666\" },\n              { name: \"青羊区\", value: \"1333\" }\n            ]\n          }\n        ]\n      };\n      map.setOption(option);\n      map.off(\"click\");\n      map.off(\"contextmenu\");\n      map.on(\"click\", function(params) {\n        console.log(\"params1\", params);\n        self.next(params)\n        //  map.off('click')\n        //逻辑控制\n      });\n      map.on(\"contextmenu\", function(params) {\n        console.log(\"params2\", params);\n        self.pre(params)\n        //鼠标右键事件，显示右键返回上一级\n      });\n    }\n  },\n  mounted() {\n    this.init()\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n  #echarts{\n    width: 1600px;\n    height: 700px;\n    margin-left: auto;\n    margin-right: auto;\n    float: right;\n  }\n</style>"],"sourceRoot":"src/views/echarts"}]}