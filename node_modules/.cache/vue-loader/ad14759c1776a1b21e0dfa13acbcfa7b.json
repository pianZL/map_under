{"remainingRequest":"D:\\chaotuPro\\map_under\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\chaotuPro\\map_under\\src\\views\\echarts\\index.vue?vue&type=style&index=0&id=28995d5a&lang=less&scoped=true&","dependencies":[{"path":"D:\\chaotuPro\\map_under\\src\\views\\echarts\\index.vue","mtime":1602207289948},{"path":"D:\\chaotuPro\\map_under\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\chaotuPro\\map_under\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2VjaGFydHN7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiA3NDBweDsKICBtYXJnaW4tbGVmdDogYXV0bzsKICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgYmFja2dyb3VuZC1jb2xvcjogYXF1YTsKICBmbG9hdDogcmlnaHQ7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/echarts","sourcesContent":["<template>\n<div>\n  <div id=\"echarts\"></div>\n  <el-button @click=\"download\">下载</el-button>\n</div>\n</template>\n<script>\nexport default {\n  name: \"Echarts\",\n  data() {\n    return {\n      mapName: '全国',\n      mapData: [],\n      oldNameList: [],\n      level: 0\n    };\n  },\n  methods: {\n    download() {\n      window.location.href = \"https://geo.datav.aliyun.com/areas_v2/bound/100000_full.json\"\n      console.log(\"a\",a)\n\n    },\n    // 下一级\n    next(param) {\n      const self = this\n      const index = self.oldNameList.findIndex(e=>{\n        return e.name === param.name\n      })\n      if(index === -1 && self.mapName !== param.name) {\n        const oldMapInfo = {name:param.name,parent:self.mapName,level:self.level}\n        self.mapName = param.name\n        try{\n          self.init()\n          self.oldNameList.push(oldMapInfo)\n          self.oldMapName = param.name\n          self.level += 1\n          console.log(\"next\",self.level)\n        }catch (e) {\n          self.mapName = self.oldMapName\n          self.$message.error(\"目前还未有该城市信息，请等候数据上传\")\n        }\n      } else {\n        this.$message.error(\"已经是最底层了\")\n      }\n    },\n    // 上一级\n    pre() {\n      const self = this\n      self.level -= 1\n      console.log(\"pre\",self.level)\n      const index = self.oldNameList.findIndex(e=>{\n        return e.level === self.level\n      })\n      // console.log(index)\n      if(index > -1) {\n        self.mapName = self.oldNameList[index].parent\n        console.log(self.mapName)\n        self.init()\n        self.oldNameList.splice(index,1)\n      } else {\n        self.oldNameList = []\n        self.level = 0\n        self.$message.error(\"已经是最顶层了\")\n      }\n    },\n    init() {\n      const self = this;\n      let data;\n      // try {\n        data = require(\"../../assets/json/\" + self.mapName + \".json\");\n        // self.level += 1;\n        self.mapData = data;\n        self.$echarts.registerMap(self.mapName, self.mapData);\n        let map = self.$echarts.init(document.getElementById(\"echarts\"));\n        const option = {\n          tooltip: {\n            trigger: \"item\",\n            showDelay: 0,\n            transitionDuration: 0.2,\n            formatter: function(params) {\n              return (\n                params.seriesName + \"<br/>\" + params.name + \": \" + params.value\n              );\n            }\n          },\n          // 视觉映射组件\n          visualMap: {\n            left: \"right\",\n            min: 100,\n            max: 3800,\n            inRange: {\n              color: [\n                \"#313695\",\n                \"#4575b4\",\n                \"#74add1\",\n                \"#abd9e9\",\n                \"#e0f3f8\",\n                \"#ffffbf\",\n                \"#fee090\",\n                \"#fdae61\",\n                \"#f46d43\",\n                \"#d73027\",\n                \"#a50026\"\n              ]\n            },\n            text: [\"High\", \"Low\"], // 文本，默认为数值文本\n            calculable: true\n          },\n          // 工具箱\n          toolbox: {\n            show: true,\n            left: \"left\",\n            top: \"top\",\n            feature: {\n              dataView: { readOnly: false }, // readOnly为true的时候 不显示刷新 就是唯一的数据，不能修改 ，false 则带有刷新\n              // restore: {}, // 还原数据\n              saveAsImage: {} // 将地图下载为图片\n            }\n          },\n          layoutCenter: ['50%','57%'],\n          layoutSize: 1000,\n          // 数据\n          series: [\n            {\n              name: \"1\",\n              type: \"map\",\n              map: self.mapName,\n              zoom: 0.6,\n              label: {\n                show: true\n              },\n              mapLocation: {\n                y: 30,\n                x: 60\n              },\n              itemSytle: {\n                normal: {\n                  color: \"#fecb2e\",\n                  shadowBlur: 12,\n                  shadowColor: \"#0d5ebd\"\n                }\n              },\n              coordinateSystem: \"geo\",\n              data: [\n                { name: \"锦江区\", value: \"2333\" },\n                { name: \"双流区\", value: \"2666\" },\n                { name: \"青羊区\", value: \"1333\" }\n              ]\n            }\n          ]\n        };\n        map.setOption(option);\n        map.off(\"click\");\n        map.off(\"contextmenu\");\n        // 打开地图点击事件\n        map.on(\"click\", function(params) {\n          self.next(params)\n        });\n        // 打开鼠标右键事件\n        map.on(\"contextmenu\", function(params) {\n          self.pre(params)\n        });\n    }\n  },\n  mounted() {\n    this.init()\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n  #echarts{\n    width: 100%;\n    height: 740px;\n    margin-left: auto;\n    margin-right: auto;\n    background-color: aqua;\n    float: right;\n  }\n</style>"]}]}